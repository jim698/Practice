package com.tj.ch14.controller;

import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.tj.ch14.dto.BoardDto;
import com.tj.ch14.service.BContentService;
import com.tj.ch14.service.BDeleteService;
import com.tj.ch14.service.BListService;
import com.tj.ch14.service.BModifyService;
import com.tj.ch14.service.BModifyViewService;
import com.tj.ch14.service.BReplyService;
import com.tj.ch14.service.BReplyViewService;
import com.tj.ch14.service.BService;
import com.tj.ch14.service.BWriteService;


@Controller
public class BController { // list.do?pageNum=2
	
	private BService service;
	private int writetable = 0; // write_view를 꼭 갔다가 와야 write가 되게 하기 위해서
	
	@RequestMapping(value="list", method = RequestMethod.GET)
	public String list(String pageNum, Model model) {
		model.addAttribute("pageNum", pageNum);
		service = new BListService();
		service.execute(model);
		
		return "mvcboard/list";
	}
	
	@RequestMapping(value="list", method = RequestMethod.POST)
	public String list_post(String pageNum, Model model) {
		model.addAttribute("pageNum", pageNum);
		service = new BListService();
		service.execute(model);
		
		return "mvcboard/list";
	}
	
	@RequestMapping(value="write_view", method = RequestMethod.GET)
	public String write_view() {
		
		writetable = 1; // 
		return "mvcboard/write_view";
	}
	
	@RequestMapping(value="write", method = RequestMethod.POST)
	public String write(BoardDto boardDto, HttpServletRequest request, Model model) {
		if(writetable == 1) {
			model.addAttribute("request", request); // 서비스 단에서 ip 추출하기 위해서(request.getRemoteAddr()을 하기 위해서)
			service = new BWriteService();
			service.execute(model);
			writetable = 0;
		}
		
		return "forward:list.do";
	}
	
	@RequestMapping(value="content_view", method = RequestMethod.GET)
	public String content_view(int bid, Model model) {
		model.addAttribute("bid", bid);
		service = new BContentService();
		service.execute(model);
		
		return "mvcboard/content_view";
	}
	
	@RequestMapping(value="modify_view", method = RequestMethod.GET)
	public String modify_view(int bid, Model model) {
		model.addAttribute("bid", bid);
		service = new BModifyViewService();
		service.execute(model);
		
		return "mvcboard/modify_view";
	}
	
	@RequestMapping(value="modify", method = RequestMethod.POST)
	public String modify(@ModelAttribute("bDto") BoardDto bDto, Model model, HttpServletRequest request) {
		model.addAttribute("request", request);
		service = new BModifyService();
		service.execute(model);
		
		return "forward:list.do";
	}
	
	@RequestMapping(value="delete", method = RequestMethod.GET)
	public String delete(int bid, Model model) {
		model.addAttribute("bid", bid);
		service = new BDeleteService();
		service.execute(model);
		
		return "forward:list.do";
	}
	
	@RequestMapping(value="reply_view", method = RequestMethod.GET)
	public String reply_view(int bid, Model model) {
		model.addAttribute("bid", bid);
		service = new BReplyViewService();
		service.execute(model);
		
		return "mvcboard/reply_view";
	}
	
	@RequestMapping(value="reply", method=RequestMethod.POST)
	public String reply(BoardDto boardDto, HttpServletRequest request, Model model) {
		model.addAttribute("request", request);
		service = new BReplyService();
		service.execute(model);
		
		return "forward:list.do";
	}
	
}





