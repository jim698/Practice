package com.tj.ch14.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ArrayList;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.sql.DataSource;

import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.PreparedStatementCreator;
import org.springframework.jdbc.core.PreparedStatementSetter;

import com.tj.ch14.constant.Constant;
import com.tj.ch14.dto.BoardDto;

public class BoardDao {
	public static final int SUCCESS = 1;
	public static final int FAIL = 0;
	private JdbcTemplate template;

	private static BoardDao instance = new BoardDao();

	public static BoardDao getInstance() {
		return instance;
	}

	private BoardDao() {
		template = Constant.template;
	}

	private Connection getConnection() throws SQLException {
		Connection conn = null;
		try {
			Context ctx = new InitialContext();
			DataSource ds = (DataSource) ctx.lookup("java:comp/env/jdbc/Oracle11g");
			conn = ds.getConnection();
		} catch (NamingException e) {
			System.out.println(e.getMessage());
		}

		return conn;
	}

	// 글목록
	public ArrayList<BoardDto> list(final int startRow, final int endRow) {
		
		String sql = "SELECT * FROM (SELECT ROWNUM RN, A.* FROM (SELECT * FROM MVC_BOARD ORDER BY bGROUP DESC, BSTEP) A) WHERE RN BETWEEN ? AND ?";

		return (ArrayList<BoardDto>) template.query(sql, new PreparedStatementSetter() {
			
			@Override
			public void setValues(PreparedStatement pstmt) throws SQLException {
				pstmt.setInt(1, startRow);
				pstmt.setInt(2, endRow);
				
			}
		}, new BeanPropertyRowMapper<BoardDto>(BoardDto.class));
		
	}

	// 글 갯수
	public int getBoardTotCnt() {
		
		String sql = "SELECT COUNT(*) FROM MVC_BOARD";
		return template.queryForInt(sql);		
		
	}

	// 원글쓰기
	public int write(final BoardDto dto) {
		
		String sql = "INSERT INTO MVC_BOARD (bID, bNAME, bTITLE, bCONTENT, bGROUP, bSTEP, bINDENT, bIP) VALUES"
				+ "(MVC_BOARD_SEQ.NEXTVAL, ?, ?, ?, MVC_BOARD_SEQ.CURRVAL, 0, 0, ?)";
		return template.update(sql, new PreparedStatementSetter() {
			
			@Override
			public void setValues(PreparedStatement pstmt) throws SQLException {
								
				pstmt.setString(1, dto.getBname());
				pstmt.setString(2, dto.getBtitle());
				pstmt.setString(3, dto.getBcontent());
				pstmt.setString(4, dto.getBip());
				
			}
		});		
	}

	// 히트업하기
	public void hitUp(int bid) {
		
		String sql = "UPDATE MVC_BOARD SET bHIT = bHIT + 1 WHERE bID = ?"+bid;
		template.update(sql);		
		
	}

	// 상세글 보기(dto 가져오기)
	public BoardDto contentView(int bid) {

		hitUp(bid);		
		String sql = "SELECT * FROM MVC_BOARD WHERE bID = ?"+bid;
		return template.queryForObject(sql, new BeanPropertyRowMapper<BoardDto>(BoardDto.class));		
		
	}

	// bid로 dto 가져오기(답글쓰기 + 수정)
	public BoardDto modifyView_replyView(int bid) {
		
		String sql = "SELECT * FROM MVC_BOARD WHERE bID = ?"+bid;
		return template.queryForObject(sql, new BeanPropertyRowMapper<BoardDto>(BoardDto.class));
	}

	// 글 수정하기
	public int modify(final BoardDto dto) { // 위의 글 작성처럼 작성해도 된다.~ 그냥 다르게 하신 것~
			
		return template.update(new PreparedStatementCreator() {
			
			String sql = "UPDATE MVC_BOARD SET bNAME = ?, bTITLE=?, bCONTENT=?, bIP = ? WHERE bID = ?";
			
			@Override
			public PreparedStatement createPreparedStatement(Connection conn) throws SQLException {
				PreparedStatement pstmt = conn.prepareStatement(sql);
				pstmt = conn.prepareStatement(sql);
				pstmt.setString(1, dto.getBname());
				pstmt.setString(2, dto.getBtitle());
				pstmt.setString(3, dto.getBcontent());
				pstmt.setString(4, dto.getBip());
				pstmt.setInt(5, dto.getBid());			
				
				return pstmt;
			}
			
		});
		
	}

	// 글 삭제
	public int delete(final int bid) {
		
		String sql = "DELETE FROM MVC_BOARD WHERE bID = ?";
		return template.update(sql, new PreparedStatementSetter() {
			
			@Override
			public void setValues(PreparedStatement pstmt) throws SQLException {
				pstmt.setInt(1, bid);
				
			}
		});
	}

	// 답변글 전 step A
	private void preReplyStepA(int bgroup, int bstep) {
		
		String sql = "UPDATE MVC_BOARD SET bSTEP = bSTEP + 1 WHERE bGROUP = ? AND bSTEP>?";
		return template.update(sql, new PreparedStatementSetter() {
			
			@Override
			public void setValues(PreparedStatement pstmt) throws SQLException {
				
				
			}
		})
		
		
		try {
			conn = getConnection();
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, bgroup);
			pstmt.setInt(2, bstep);
			pstmt.executeUpdate();

		} catch (SQLException e) {
			System.out.println(e.getMessage());
		} finally {
			try {

				if (pstmt != null)
					pstmt.close();
				if (conn != null)
					conn.close();

			} catch (Exception e2) {
				System.out.println(e2.getMessage());
			}
		}
	}

	// 답글쓰기
	public int reply(BoardDto dto) {

		preReplyStepA(dto.getBgroup(), dto.getBstep());

		int result = FAIL;
		Connection conn = null;
		PreparedStatement pstmt = null;
		String sql = "INSERT INTO MVC_BOARD (bID, bNAME, bTITLE, bCONTENT, bGROUP, bSTEP, bINDENT, bIP) VALUES"
				+ "(MVC_BOARD_SEQ.NEXTVAL, ?, ?, ?, ?, ?, ?, ?)";

		try {

			conn = getConnection();
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, dto.getBname());
			pstmt.setString(2, dto.getBtitle());
			pstmt.setString(3, dto.getBcontent());
			pstmt.setInt(4, dto.getBgroup());
			pstmt.setInt(5, dto.getBstep() + 1);
			pstmt.setInt(6, dto.getBindent() + 1);
			pstmt.setString(7, dto.getBip());

			result = pstmt.executeUpdate();
			System.out.println(result == SUCCESS ? "답글쓰기 성공" : "답글쓰기 실패");

		} catch (SQLException e) {
			System.out.println(e.getMessage());
		} finally {

			try {

				if (pstmt != null)
					pstmt.close();
				if (conn != null)
					conn.close();

			} catch (SQLException e) {
				System.out.println(e.getMessage());
			}
		}

		return result;
	}
}
