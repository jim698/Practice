package com.tj.ex2;

import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.Around;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Pointcut;

@Aspect
public class ProxyClass2 {
//	@Pointcut("within(com.tj.ex2.*)")
//	private void aroundM() {}
//	@Around("aroundM()")

	@Around("within(com.tj.ex2.*)")

	public Object aroundAdvice(ProceedingJoinPoint joinPoint) throws Throwable {
		System.out.println("공통 기능 around Advice 시작");
		String signatureName = joinPoint.getSignature().toShortString();
		System.out.println(signatureName + "기능 시작");

		try {
			joinPoint.proceed();
		} finally {
			System.out.println(signatureName + "기능 종료");
		}
	}
}
